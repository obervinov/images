---
name: Build images

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write
    strategy:
      matrix:
        directories:
          - "docker/backup-tools"
          - "docker/caddy"
          - "docker/certbot"
          - "docker/debug"
          - "docker/ghub"
          - "docker/glab"
          - "docker/gradle"
          - "docker/jupyterhub"
          - "docker/python"
          - "docker/vault"
          - "docker/trivy-ui"
          - "docker/smartctl-exporter"
          - "docker/popeye"
s
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (for Docker buildx)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Trivy
        run: |
          # Install Trivy
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          sudo wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          sudo echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Build and Push Docker images
        run: |
          # Build and push Docker images to GitHub Container Registry
          echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          image_name=$(pwd | awk -F / '{print $NF}')
          image_tag=$(cat Dockerfile | grep -i 'ARG IMAGE_VERSION='| awk -F = '{print $2}')
          # Build multi-arch image with specific tags
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg="PROJECT_NAME=${{ github.event.repository.name }}" \
            -t ghcr.io/${{ github.repository }}/${image_name}:${image_tag} \
            . --push
          # Add latest tag to the image
          docker buildx imagetools create \
            ghcr.io/${{ github.repository }}/${image_name}:${image_tag} \
            --tag ghcr.io/${{ github.repository }}/${image_name}:latest
          # Scan Docker images with Trivy
          trivy image --exit-code 0 --severity HIGH,CRITICAL ghcr.io/${{ github.repository }}/${image_name}:${image_tag} -f sarif -o trivy-results-${image_name}-${image_tag}.sarif
          # Upload Trivy scan results
          curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/code-scanning/sarifs -d "{\"commit_sha\":\"${{ github.sha }}\",\"ref\":\"${{ github.ref }}\",\"sarif\":\"$(gzip -c trivy-results-${image_name}-${image_tag}.sarif | base64 -w 0)\"}"
        working-directory: ${{ matrix.directories }}
        continue-on-error: true

  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write
    strategy:
      matrix:
        packages:
          - "backup-tools"
          - "caddy"
          - "certbot"
          - "debug"
          - "ghub"
          - "glab"
          - "gradle"
          - "jupyterhub"
          - "python"
          - "vault"
          - "trivy-ui"
          - "smartctl-exporter"
          - "popeye"

    steps:
      - name: Delete untagged images from GitHub Container Registry
        continue-on-error: true
        uses: Chizkiyahu/delete-untagged-ghcr-action@v6
        with:
          token: ${{ secrets.PAT_GHCR_CLEANUP }}
          package_name: ${{ matrix.packages }}
          untagged_only: true
          except_untagged_multiplatform: true
          owner_type: 'user'
