---
name: Build images

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: read
      contents: write
      packages: write
      security-events: write
    strategy:
      matrix:
        directories:
          - "docker/backup-tools"
          - "docker/caddy"
          - "docker/certbot"
          - "docker/debug"
          - "docker/ghub"
          # - "docker/glab"
          - "docker/gradle"
          - "docker/jupyterhub"
          - "docker/python"
          - "docker/vault"
          - "docker/trivy-ui"
          - "docker/smartctl-exporter"
          - "docker/popeye"
          - "docker/fluentd"

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up QEMU (for Docker buildx)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Trivy
        run: |
          # Install Trivy
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          sudo wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          sudo echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy

      - name: Check for Dockerfile changes in current directory
        id: check_changes
        run: |
          if git diff --quiet ${{ github.event.before }} ${{ github.sha }} -- ${{ matrix.directories }}/Dockerfile; then
            echo "Dockerfile in ${{ matrix.directories }} has no changes. Skipping build."
            echo "build_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Dockerfile in ${{ matrix.directories }} has changes. Proceeding with build."
            echo "build_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker images
        if: steps.check_changes.outputs.build_needed == 'true'
        run: |
          # Build and push Docker images to GitHub Container Registry
          echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          image_name=$(pwd | awk -F / '{print $NF}')
          image_tag=$(cat Dockerfile | grep -i 'ARG IMAGE_VERSION='| awk -F = '{print $2}')
          # Build multi-arch image with specific tags
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg="PROJECT_NAME=${{ github.event.repository.name }}" \
            -t ghcr.io/${{ github.repository }}/${image_name}:${image_tag} \
            . --push
          # Add latest tag to the image
          docker buildx imagetools create \
            ghcr.io/${{ github.repository }}/${image_name}:${image_tag} \
            --tag ghcr.io/${{ github.repository }}/${image_name}:latest
          # Scan Docker images with Trivy
          trivy image --exit-code 0 --severity HIGH,CRITICAL ghcr.io/${{ github.repository }}/${image_name}:${image_tag} -f sarif -o trivy-results-${image_name}-${image_tag}.sarif
          # Upload Trivy scan results
          curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ github.token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/code-scanning/sarifs -d "{\"commit_sha\":\"${{ github.sha }}\",\"ref\":\"${{ github.ref }}\",\"sarif\":\"$(gzip -c trivy-results-${image_name}-${image_tag}.sarif | base64 -w 0)\"}"
        working-directory: ${{ matrix.directories }}
        continue-on-error: false
